import React from "react";
import { useParams } from "react-router-dom";
import { useState, useEffect } from "react";
import UserService from "../services/UserService";
import Box from "@mui/material/Box";
import Fade from "@mui/material/Fade";
import Button from "@mui/material/Button";
import Typography from "@mui/material/Typography";

const style = {
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  width: 400,
  bgcolor: "background.paper",
  border: "2px solid #000",
  boxShadow: 24,
  p: 4,
};

function Vulnerabilitydetails() {
  const [vulndetails, setVulndetails] = useState([]);
  let { id, key } = useParams();
  console.log(key);
  console.log(id);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch(
          `https://backend-cybercops.herokuapp.com/fixes/getSessionVulnerabilities/${id}`,
          {
            method: "GET",
            mode: "cors",
            headers: {
              //put the keycloak access token in the Authorization header
              Authorization: `Bearer ${UserService.getToken()}`,
              "Access-Control-Allow-Origin":
                "https://cybercops-frontend-2.herokuapp.com/",
              "Content-type": "application/json; charset=UTF-8",
            },
          }
        );
        const json = await response.json();
        console.log(json);
        json.map((item) => {
          if (item.vulnerability.key === key) {
            console.log("ra dkhel");
            setVulndetails(item);
            console.log(vulndetails);
          }
        });
      } catch (error) {
        console.log("error", error);
      }
    };

    fetchData();
  }, []);
  console.log(vulndetails ? vulndetails : "vulndetails not set");

  return (
    <Box sx={style}>
      <Typography id="transition-modal-title" variant="h6" component="h2">
        {vulndetails &&
        vulndetails.vulnerability &&
        vulndetails.vulnerability.title
          ? vulndetails.vulnerability.title
          : "not loaded yet"}
      </Typography>
      <Typography id="transition-modal-description" sx={{ mt: 2 }}>
        {vulndetails &&
        vulndetails.vulnerability &&
        vulndetails.vulnerability.description
          ? vulndetails.vulnerability.description
          : "not loaded yet"}
      </Typography>
      <Typography id="transition-modal-description" sx={{ mt: 2 }}>
        {vulndetails &&
        vulndetails.vulnerability &&
        vulndetails.vulnerability.criticality
          ? vulndetails.vulnerability.criticality
          : "not loaded yet"}
      </Typography>
      <Typography id="transition-modal-description" sx={{ mt: 2 }}>
        {vulndetails && vulndetails.status
          ? vulndetails.status
          : "not loaded yet"}
      </Typography>
      <Button variant="outlined" target="_blank">
        Start coding
      </Button>
    </Box>
  );
}

export default Vulnerabilitydetails;
