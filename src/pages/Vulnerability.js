import React from "react";
import Row from "../components/FlexRow";
import { Typography, Grid } from "@mui/material";
import { useParams } from "react-router-dom";
import { useState, useEffect, useRef } from "react";
import UserService from "../services/UserService";
import IssuePage from "../components/pages/issue";

function Vulnerability() {
  const sessid = useRef("");
  const [vulns, setVulns] = useState([]);

  let { title } = useParams();

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response1 = await fetch(
          "https://backend-cybercops.herokuapp.com/session/getAll",
          {
            method: "GET",
            mode: "cors",
            headers: {
              //put the keycloak access token in the Authorization header
              Authorization: `Bearer ${UserService.getToken()}`,
              "Access-Control-Allow-Origin":
                "https://cybercops-frontend-2.herokuapp.com/",
              "Content-type": "application/json; charset=UTF-8",
            },
          }
        );
        const json1 = await response1.json();
        console.log(json1);

        json1.map((item) => {
          if (item.challenge.key === title) {
            sessid.current = item.id;
            console.log(sessid);
          }
        });
      } catch (error) {
        console.log("error", error);
      }

      try {
        const response = await fetch(
          `https://backend-cybercops.herokuapp.com/fixes/getSessionVulnerabilities/${sessid.current}`,
          {
            method: "GET",
            mode: "cors",
            headers: {
              //put the keycloak access token in the Authorization header
              Authorization: `Bearer ${UserService.getToken()}`,
              "Access-Control-Allow-Origin":
                "https://cybercops-frontend-2.herokuapp.com/",
              "Content-type": "application/json; charset=UTF-8",
            },
          }
        );
        const json = await response.json();
        console.log(json);
        setVulns(json);
      } catch (error) {
        console.log("error", error);
      }
    };

    fetchData();
  }, []);

  return ( 
    <IssuePage /> 
  );
}

export default Vulnerability;
